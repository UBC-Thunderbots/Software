syntax                  = "proto2";
option cc_enable_arenas = true;

package amun;

message Color
{
    optional uint32 red   = 1 [default = 0];
    optional uint32 green = 2 [default = 0];
    optional uint32 blue  = 3 [default = 0];
    optional uint32 alpha = 4 [default = 255];
};

message Pen
{
    enum Style
    {
        DashLine       = 1;
        DotLine        = 2;
        DashDotLine    = 3;
        DashDotDotLine = 4;
    }

    optional Style style = 1;
    optional Color color = 2;
}

message Circle
{
    required float p_x    = 1;
    required float p_y    = 2;
    required float radius = 3;
};

message Point
{
    required float x = 1;
    required float y = 2;
}

message Polygon
{
    repeated Point point = 1;
}

message Path
{
    repeated Point point = 1;
}

message Visualization
{
    required string name     = 1;
    optional Pen pen         = 2;
    optional Color brush     = 3;
    optional float width     = 4;
    optional Circle circle   = 5;
    optional Polygon polygon = 6;
    optional Path path       = 7;
    optional bool background = 8 [default = false];
};

message DebugValue
{
    required string key          = 1;
    optional float float_value   = 2;
    optional bool bool_value     = 3;
    optional string string_value = 4;
}

message StatusLog
{
    required int64 timestamp = 1;
    required string text     = 2;
}

message PlotValue
{
    required string name = 1;
    required float value = 2;
}

enum DebugSource
{
    StrategyBlue       = 1;
    StrategyYellow     = 2;
    Controller         = 3;
    Autoref            = 4;
    Tracking           = 5;
    RadioResponse      = 6;
    ReplayBlue         = 7;
    ReplayYellow       = 8;
    NetworkTransceiver = 9;
    GameController     = 10;
}

message RobotValue
{
    required uint32 generation = 1;
    required uint32 id         = 2;
    optional bool exchange     = 3;
}

message DebuggerOutput
{
    optional string line = 1;
}

message DebugValues
{
    required DebugSource source             = 1;
    optional int64 time                     = 7;
    repeated DebugValue value               = 2;
    repeated Visualization visualization    = 3;
    repeated StatusLog log                  = 4;
    repeated PlotValue plot                 = 5;
    repeated RobotValue robot               = 6;
    optional DebuggerOutput debugger_output = 8;
}
