syntax = "proto2";

message Tbots_EncoderData {
//TODO define encoder data and create filter for it
}

message Tbots_FrankieStatus {

    // When the proto was created according to lwIP SNTP time
    required uint64 time_created = 1;

    /** Power **/

    // The voltage on the robot’s battery, in volts.
    required double battery_voltage = 2;

    // voltage on the robot’s capacitor, in volts.
    required double capacitor_voltage = 3;

    /** Chipper Kicker **/

    // Whether or not the robot’s capacitor is charged enough to kick the ball.
    required bool capacitor_charged_enough_to_kick_ball = 4;

    // Indicates the time elapsed since chipper was last fired in ms
    // UINT64_MAX indicates chipper was never fired
    required uint64 time_since_chipper_fired = 5;

    // Indicates the time elapsed since kicker was last fired in ms
    // UINT64_MAX indicates kicker was never fired
    required uint64 time_since_kicker_fired = 6;

    /** Break beam **/

    // Whether or not the ball is interrupting the robot’s laser beam.
    required bool ball_in_beam = 7;

    // The reading of the robot’s laser sensor.
    required double break_beam_reading = 8;

    // The maximum full-scale deflection (maximum possible reading) of the laser sensor.
    required double break_beam_scale = 9;

    /** Motors **/

    // The speed of the robot’s dribbler motor, in revolutions per minute.
    required int32 dribbler_speed = 10;

    // Encoder information TBD
    required Tbots_EncoderData encoder_data = 11; 

    /** Temperatures **/

    // The temperature of the robot’s dribbler motor, in degrees Celsius.
    required double dribbler_temperature = 12;

    // The temperature of the robot’s mainboard, in degrees Celsius.
    required double board_temperature = 13;

    /** Network **/

    // Indicates the time elapsed since the last vision packet was received in ms
    // UINT64_MAX indicates no vision packet was ever received
    required uint64 time_since_last_vision_received = 14;

    // Indicates the time elapsed since the last primitive packet was received in ms
    // UINT64_MAX indicates no primitive packet was ever received
    required uint64 time_since_last_primitive_received = 15;

    /** Firmware build info **/

    // Whether or not the build ID information is valid.
    required bool build_ids_valid = 16;

    // The microcontroller firmware build ID.
    required uint32 fw_build_id = 17;
}
