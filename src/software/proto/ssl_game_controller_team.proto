syntax = "proto2";

import "software/proto/ssl_game_controller_common.proto";

// a registration that must be send by teams and autoRefs to the controller as the very first message
message TeamRegistration {
    // the exact team name as published by the game-controller
    required string team_name = 1;
    // signature can optionally be specified to enable secure communication
    optional Signature signature = 2;
}

// wrapper for all messages from a team's computer to the controller
message TeamToController {
    // signature can optionally be specified to enable secure communication
    optional Signature signature = 1;

    oneof msg {
        // request a new desired keeper id
        // this is only allowed during STOP and will be rejected otherwise
        int32 desired_keeper = 2;
        // response to an advantage choice request
        AdvantageResponse advantage_response = 3;
        // request to substitute a robot at the next possibility
        bool substitute_bot = 4;
    }

    enum AdvantageResponse {
        option allow_alias = true;
        // no choice -> will default to STOP
        UNDECIDED = 0;
        // stop the game and handle the foul immediately
        STOP = 0;
        // continue the game until the next stop of the game, then handle the foul
        CONTINUE = 1;
    }
}

// wrapper for all messages from controller to a team's computer
message ControllerToTeam {
    oneof msg {
        // a reply from the controller
        ControllerReply controller_reply = 1;
        // the team is offered an advantage choice
        AdvantageChoice advantage_choice = 2;
    }
}

// information about the advantage choice that is offered to a team
message AdvantageChoice {
    // the type of foul that occurred
    required Foul foul = 1;

    enum Foul {
        // default value when not set
        UNKNOWN = 0;
        // an opponent bot has crashed with one of your bots
        COLLISION = 1;
        // an opponent bot has pushed one of your bots
        PUSHING = 2;
    }
}
