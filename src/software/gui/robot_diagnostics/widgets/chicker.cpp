#include "software/gui/robot_diagnostics/widgets/chicker.h"

void setupChicker(Ui::AutoGeneratedMainWidget *widget, double &chicker_power,
                  bool &chicker_autochick)
{
    auto chicker_power_changed_callback = [&chicker_power](double value) {
        chicker_power = value;
    };

    setupSliderLineEdit(widget->lineEdit_chicker_power, widget->slider_chicker_power,
                        chicker_power_changed_callback, 0.0, 10.0, 10.0);

    setupChickerChargeRadioButtons(widget);
    setupChickerAutochickRadioButtons(widget);
    setupChickerPushButtons(widget);
}

void setupChickerChargeRadioButtons(Ui::AutoGeneratedMainWidget *widget)
{
    widget->radioButton_discharge->setChecked(true);

    auto on_charge_mode_button_changed = [widget](const bool toggle) {
        if (widget->radioButton_discharge->isChecked())
        {
            widget->pushButton_chicker_kick->setEnabled(false);
            widget->pushButton_chicker_chip->setEnabled(false);
            widget->radioButton_autokick->setEnabled(false);
            widget->radioButton_autochip->setEnabled(false);
            widget->radioButton_autochick_none->setChecked(true);
            // TODO (Issue #1229): send some proto
        }
        else if (widget->radioButton_float->isChecked())
        {
            widget->radioButton_autokick->setEnabled(true);
            widget->radioButton_autochip->setEnabled(true);
            widget->pushButton_chicker_kick->setEnabled(true);
            widget->pushButton_chicker_chip->setEnabled(true);
            widget->radioButton_autochick_none->setChecked(true);
            // TODO (Issue #1229): send some proto
            // TODO (Issue #1229): send some proto
        }
        else if (widget->radioButton_charge->isChecked())
        {
            widget->radioButton_autokick->setEnabled(true);
            widget->radioButton_autochip->setEnabled(true);
            widget->pushButton_chicker_kick->setEnabled(true);
            widget->pushButton_chicker_chip->setEnabled(true);
            widget->radioButton_autochick_none->setChecked(true);
            // TODO (Issue #1229): send some proto
        }
    };

    QWidget::connect(widget->radioButton_discharge, &QRadioButton::toggled,
                     on_charge_mode_button_changed);
    QWidget::connect(widget->radioButton_float, &QRadioButton::toggled,
                     on_charge_mode_button_changed);
    QWidget::connect(widget->radioButton_charge, &QRadioButton::toggled,
                     on_charge_mode_button_changed);
}

void setupChickerAutochickRadioButtons(Ui::AutoGeneratedMainWidget *widget)
{
    // Initial state is chicker discharged, so autochick radio buttons are disabled
    widget->radioButton_autochick_none->setChecked(true);
    widget->radioButton_autokick->setEnabled(false);
    widget->radioButton_autochip->setEnabled(false);

    auto on_autochick_mode_button_changed = [widget](const bool toggle) {
        if (widget->radioButton_autokick->isChecked())
        {
            widget->pushButton_chicker_kick->setEnabled(false);
            widget->pushButton_chicker_chip->setEnabled(false);
            // TODO (Issue #1229): send some proto
        }
        else if (widget->radioButton_autochip->isChecked())
        {
            widget->pushButton_chicker_kick->setEnabled(false);
            widget->pushButton_chicker_chip->setEnabled(false);
            // TODO (Issue #1229): send some proto
        }
        else if (widget->radioButton_autochick_none->isChecked())
        {
            widget->pushButton_chicker_kick->setEnabled(true);
            widget->pushButton_chicker_chip->setEnabled(true);
            // TODO (Issue #1229): send some proto
        }
    };

    QWidget::connect(widget->radioButton_autokick, &QRadioButton::toggled,
                     on_autochick_mode_button_changed);
    QWidget::connect(widget->radioButton_autochip, &QRadioButton::toggled,
                     on_autochick_mode_button_changed);
    QWidget::connect(widget->radioButton_autochick_none, &QRadioButton::toggled,
                     on_autochick_mode_button_changed);
}

void setupChickerPushButtons(Ui::AutoGeneratedMainWidget *widget)
{
    // Initial state is chicker discharged, so chick push buttons are disabled
    widget->pushButton_chicker_kick->setEnabled(false);
    widget->pushButton_chicker_chip->setEnabled(false);

    auto kick_pushed = [widget]() {
        widget->radioButton_autochick_none->setChecked(true);
        // TODO (Issue #1229): send some proto
    };

    auto chip_pushed = [widget]() {
        widget->radioButton_autochick_none->setChecked(true);
        // TODO (Issue #1229): send some proto
    };

    QWidget::connect(widget->pushButton_chicker_kick, &QPushButton::clicked, kick_pushed);

    QWidget::connect(widget->pushButton_chicker_chip, &QPushButton::clicked, chip_pushed);
}

void resetAutochickRadioButtons(Ui::AutoGeneratedMainWidget *widget) {}
