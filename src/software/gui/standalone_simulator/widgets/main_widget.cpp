#include "software/gui/standalone_simulator/widgets/main_widget.h"

#include "software/gui/generic_widgets/world_view/world_view.h"

MainWidget::MainWidget(QWidget* parent)
    : QWidget(parent), main_widget(new Ui::AutoGeneratedMainWidget())
{
    // Handles all the setup of the generated UI components and adds the components
    // to this widget
    main_widget->setupUi(this);
    scene    = new QGraphicsScene(main_widget->simulation_graphics_view);
    glWidget = new QOpenGLWidget(this);

    // StrongFocus means that the MainWidget will more aggressively capture focus when
    // clicked. Specifically, we do this so that when the user clicks outside of the
    // QLineEdits used for Parameters, the QLineEdit will lose focus.
    // https://www.qtcentre.org/threads/41128-Need-to-implement-in-place-line-edit-unable-to-get-lose-focus-of-QLineEdit
    setFocusPolicy(Qt::StrongFocus);

    setupSceneView(main_widget->simulation_graphics_view, scene, glWidget);

    // Update to make sure all layout changes apply nicely
    update();
}

void MainWidget::draw(const std::vector<DrawFunction>& draw_functions)
{
    scene->clear();
    for (auto draw_function : draw_functions)
    {
        draw_function.execute(scene);
    }
}

void MainWidget::setDrawViewArea(const QRectF& new_view_area)
{
    scene->setSceneRect(new_view_area);
    main_widget->simulation_graphics_view->fitInView(scene->sceneRect(),
                                                     Qt::KeepAspectRatio);
}
