---

- name: Setting up the Raspberry Pi
  hosts: THUNDERBOTS_HOSTS

  tasks:

    - name: Check internet connection
      tags: dependencies
      ansible.builtin.import_tasks:
        file: ../tasks/check_internet.yml

    - name: Enable passwordless sudo for rsync
      tags:
        - dependencies
        - configure_pi
      ansible.builtin.import_tasks:
        file: ../tasks/enable_password_less_sudo_for_rsync.yml

    - name: Setup Robot Software dependencies
      tags:
        - dependencies
      ansible.builtin.import_tasks:
        file: ../tasks/setup_robot_software_deps.yml

    - name: Setup systemd
      tags:
        - dependencies
        - configure_pi
      ansible.builtin.import_tasks:
        file: ../tasks/setup_systemd.yml

    - name: Add user robot to dialout
      tags:
        - configure_pi
        - dependencies
      ansible.builtin.import_tasks:
        file: ../tasks/add_user_to_dialout.yml

    - name: Disable pcie_aspm
      tags:
        - configure_pi
      block:
        - name: Backup cmdline.txt
          become: true
          become_method: sudo
          ansible.builtin.copy:
            src: /boot/firmware/cmdline.txt
            dest: /boot/firmware/cmdline.txt.bak
            remote_src: true

        - name: Check if pcie_aspm is disabled
          ansible.builtin.shell: 'grep -q "pcie_aspm=off" /boot/firmware/cmdline.txt'
          ignore_errors: true
          register: pcie_aspm_disabled

        - name: Disable pcie_aspm
          when: pcie_aspm_disabled.rc != 0
          become: true
          become_method: sudo
          ansible.builtin.lineinfile:
            path: /boot/firmware/cmdline.txt
            regexp: ^(\s*console.*)$
            backrefs: yes
            line: '\1 pcie_aspm=off'
            state: present

    - name: Set up SPI and Wifi drivers
      tags: configure_pi
      block:
        - name: Sync setup files
          ansible.posix.synchronize:
            src: ../../linux_configs/pi/setup.zip
            dest: ~/
            copy_links: yes

        - name: Unzip setup files
          ansible.builtin.unarchive:
            src: ~/setup.zip
            dest: ~/
            remote_src: true
         
        - name: Set up Wifi drivers
          become: true
          become_method: sudo
          shell: 'mv /home/{{ ansible_user }}/iwlwifi* /lib/firmware/'

        - name: Set up systemd WiFI interface name rule
          ansible.builtin.import_tasks:
            file: ../tasks/setup_wifi_interface.yml

        - name: Set up SPI overlay
          become: true
          become_method: sudo
          shell: 'mv /home/{{ ansible_user }}/spi0-5cs.dtbo /boot/firmware/overlays/'

        - name: Update config.txt to select custom SPI overlay
          become: true
          become_method: sudo
          ansible.posix.synchronize:
            src: ../../linux_configs/pi/config.txt
            dest: /boot/firmware/
            copy_links: yes
            rsync_opts:
              - "--no-perms"
              - "--no-o"
              - "--no-g"

    - name: Change hostname
      tags: update_hostname
      ansible.builtin.import_tasks:
        file: ../tasks/set_user_hostname.yml

    - name: Reboot
      tags:
        - dependencies
        - configure_pi
        - update_hostname
      ansible.builtin.import_tasks:
        file: ../tasks/reboot.yml

    - name: Success
      tags:
        - dependencies
        - configure_pi
        - update_hostname
      ansible.builtin.debug:
        msg: "Raspberry Pi setup complete for {{ inventory_hostname }}"
