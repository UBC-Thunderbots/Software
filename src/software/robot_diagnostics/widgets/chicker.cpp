#include "software/robot_diagnostics/widgets/chicker.h"

void setupChicker(Ui::AutoGeneratedMainWidget *widget, double &chicker_power,
                  bool &chicker_autochick)
{
    setupSliderLineEdit(widget->lineEdit_chicker_power, widget->slider_chicker_power,
                        chicker_power, 0.0, 99.0, 1.0);

    setupChickerRadioButtons(widget);

    auto kick_pushed = []() {
        // TODO (Issue #1229): send some proto
    };

    auto chip_pushed = []() {
        // TODO (Issue #1229): send some proto
    };

    auto chicker_auto_toggle = [&chicker_autochick, widget](const int state) {
        if (state == Qt::Checked)
        {
            widget->pushButton_chicker_kick->setText("Autokick");
            widget->pushButton_chicker_chip->setText("Autochip");
            chicker_autochick = true;
        }
        else
        {
            widget->pushButton_chicker_kick->setText("Kick");
            widget->pushButton_chicker_chip->setText("Chip");
            chicker_autochick = false;
        }
    };

    QWidget::connect(widget->pushButton_chicker_kick, &QPushButton::clicked, kick_pushed);

    QWidget::connect(widget->pushButton_chicker_chip, &QPushButton::clicked, chip_pushed);

    QWidget::connect(widget->checkBox_chicker_auto, &QCheckBox::stateChanged,
                     chicker_auto_toggle);
}

void setupChickerRadioButtons(Ui::AutoGeneratedMainWidget *widget)
{
    widget->radioButton_discharge->setChecked(true);

    auto on_charge_mode_button_changed = [widget](const bool toggle) {
        if (widget->radioButton_discharge->isChecked())
        {
            // TODO (Issue #1229): send some proto
        }
        else if (widget->radioButton_float->isChecked())
        {
            // TODO (Issue #1229): send some proto
        }
        else if (widget->radioButton_charge->isChecked())
        {
            // TODO (Issue #1229): send some proto
        }
    };

    QWidget::connect(widget->radioButton_discharge, &QRadioButton::toggled,
                     on_charge_mode_button_changed);
    QWidget::connect(widget->radioButton_float, &QRadioButton::toggled,
                     on_charge_mode_button_changed);
    QWidget::connect(widget->radioButton_charge, &QRadioButton::toggled,
                     on_charge_mode_button_changed);
}
