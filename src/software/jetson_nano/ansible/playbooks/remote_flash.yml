---

- name: Remote flashing
  hosts: THUNDERBOTS_HOSTS
  vars:
   all_services:
     - thunderloop
     - display
     - announcement
     - redis
   all_actions:
     - stop
     - sync
     - start
   binary_paths:
     thunderloop: ../../../../../../../../jetson_nano/thunderloop_main
     announcement: ../../../../../../../../jetson_nano/broadcasts
     redis: ../../../../../../../../jetson_nano/redis
     display: ../../../../../../../../jetson_nano/display/robot_ui

  tasks:

    - debug:
        msg: "[Robot ID = {{ inventory_hostname }}]"
      tags: always

    - name: extract services & actions from tags
      set_fact:
        services: "{{ all_services if ansible_run_tags | intersect(all_services)|length == 0 else ansible_run_tags | intersect(all_services) }}"
        actions: "{{ all_actions if ansible_run_tags|intersect(all_actions)|length == 0 else ansible_run_tags | intersect(all_actions)}}"
      tags: always

    - debug:
        msg: "Performing the following actions: {{ actions }}
        on the following services: {{ services }}"
      tags: always

    - name: Stop Services
      become: true
      become_method: sudo
      ansible.builtin.systemd:
        name: "{{ service_name }}"
        masked: no
        daemon_reload: yes
        state: stopped
      with_items: "{{ services }}"
      loop_control:
        loop_var: service_name
      when: "'stop' in actions"
      tags: always

    - name: Sync Binaries
      ansible.posix.synchronize:
        src: "{{ binary_paths[service_name] }}"
        dest: ~/thunderbots_binaries/
        recursive: yes
        copy_links: yes
      with_items: "{{ services }}"
      loop_control:
        loop_var: service_name
      when: "'sync' in actions"
      tags: always


    - name: Start Services
      become: true
      become_method: sudo
      ansible.builtin.systemd:
        name: "{{ service_name }}"
        masked: no
        daemon_reload: yes
        state: started
      with_items: "{{ services }}"
      loop_control:
        loop_var: service_name
      when: "'start' in actions"
      tags: always
