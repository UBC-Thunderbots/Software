#######################################################################
#                              Constants                              #
#######################################################################

# the weird espace charecters at the front change the color to red when 
# printed in a terminal, the espace charecter at the end clears and resets
# back to the original color. More info can be found here:
# https://stackoverflow.com/questions/287871/print-in-terminal-with-colors
AUTOGEN_FAILURE_MSG = \
"""\033[91m====================================================\033[0m
\033[91m                CFG AUTOGEN FAILURE
\u001b[34;1m Reason: {}
\033[91m====================================================\033[0m"""

# the working directory is set to the current folder in CMakeLists
PATH_TO_YAML = './software/util/parameter/config/'
PATH_TO_AUTOGEN_CFG = './software/util/parameter/autogenerated/cfg/'
PATH_TO_AUTOGEN_CPP = './software/util/parameter/'
PATH_TO_AUTOGEN_NODE = './software/dynamic_reconfigure_manager/'
DYNAMIC_PARMETERS_HEADER = 'dynamic_parameters.h'
DYNAMIC_PARMETERS_CPP = 'dynamic_parameters.cpp'

#######################################################################
#                              Parameter                              #
#######################################################################

PARAMETER_PUBLIC_ENTRY =\
        """const std::shared_ptr<const Parameter<{type}>> {immutable_accessor_name} () const
           {{
               return std::const_pointer_cast<const Parameter<{type}>>({param_variable_name});
           }}

           std::shared_ptr<Parameter<{type}>> {mutable_accessor_name} () const
           {{
               return {param_variable_name};
           }}
        """

PARAMETER_PRIVATE_ENTRY =\
        "std::shared_ptr<Parameter<{type}>> {param_variable_name};"

PARAMETER_CONSTRUCTOR_ENTRY =\
        """std::vector<{type}>{param_variable_name}_options = std::vector<{type}>{{{options}}};
        {param_variable_name} = std::make_shared<Parameter<{type}>>(\"{param_name}\", {quote}{value}{quote}, {param_variable_name}_options);"""

#######################################################################
#                               Config                                #
#######################################################################

CONFIG_PUBLIC_ENTRY =\
        """const std::shared_ptr<const {config_name}> {immutable_accessor_name} () const
           {{
               return std::const_pointer_cast<const {config_name}>({config_variable_name});
           }}

           std::shared_ptr<const {config_name}> {mutable_accessor_name} () const
           {{
               return {config_variable_name};
           }}
        """

CONFIG_CONSTRUCTOR_ENTRY =\
        "{config_variable_name} = std::make_shared<{config_name}>();"

CONFIG_PRIVATE_ENTRY =\
        "std::shared_ptr<{config_name}> {config_variable_name};"

CONFIG_CLASS =\
"""class {config_name} : public Config
{{
   public:
    {config_name}()
    {{
        {constructor_entries}
        internal_param_list = {{{parameter_list_entries}}};
    }}
    {public_entries}

    std::string name()
    {{
        return "{config_name}";
    }}

    ParameterList& getMutableParameterList()
    {{
        return internal_param_list;
    }}

    const ParameterList& getParameterList()
    {{
        return internal_param_list;
    }}

   private:
        ParameterList internal_param_list;
        {private_entries}
}};
"""

AUTOGEN_WARNING = \
"""
/**
 *  !! WARNING !!
 *
 *  THIS FILE IS AUTOGENERATED, ANY CHANGES MADE WILL BE LOST
 *
 *  !! WARNING !!
 */
"""

H_HEADER = \
"""{}
#pragma once
#include \"software/util/parameter/config_utils.hpp\"
""".format(AUTOGEN_WARNING)
