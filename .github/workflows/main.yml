name: Tbots CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-18.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
        
      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh
      
      - name: Check Formatting
        run: |
          ./formatting_scripts/check_formatting_ci.sh
          
  software-tests:
    name: Software Tests
    runs-on: ubuntu-18.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh
          
      - name: Cache Bazel External Dependencies
        uses: actions/cache@v2
        with:
          path: |
            "${GITHUB_WORKSPACE}"/src/bazel-src/external
          key: bazel
          
      - name: Software Test
        run: |
          cd src
          bazel coverage                     \
            --compilation_mode=fastbuild     \
            --verbose_test_summary           \
            --instrumentation_filter=//...   \
            --test_output=errors             \
            -- //... -//software/simulated_tests/... \
            -//firmware_new/...
             
      # uploads coverage data to codecov
      - name: Upload Coverage
        run: |
         cd src
         bash <(curl -s https://codecov.io/bash) -s bazel-testlogs/ > codecov.log
         cat codecov.log | head -n100
         cat codecov.log | tail -n100
         
  firmware-tests:
    name: Firmware Tests
    runs-on: ubuntu-18.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
    
      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh
          "${GITHUB_WORKSPACE}"/environment_setup/setup_firmware.sh

      - name: New Robot Firmware Build
        run: |
         cd src
         bazel build --cpu=stm32h7 //firmware_new/boards/frankie_v1:frankie_v1_main 
     
      - name: Old Robot Firmware Build
        run: |
         cd src
         bazel build --cpu=stm32f4 //firmware/boards/legacy_robot_stm32f4:bin 
         
      - name: Old Radio Dongle Firmware Build
        run: |
         cd src
         bazel build --cpu=stm32f4 //firmware/boards/legacy_dongle_stm32f4:bin         
             
  simulated-gameplay-tests:
    name: Simulated Gameplay Tests
    runs-on: ubuntu-18.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
        
      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: Simulated Test
        run: |
          cd src
          bazel test //software/simulated_tests/...
          
  memory-leak-checks:
    name: Memory Leak Checks
    runs-on: ubuntu-18.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: Simulation Memory Leak Check
        run: |
          cd src
          bazel test -c dbg  \
            --run_under="valgrind --leak-check=yes --undef-value-errors=no --error-exitcode=1"   \
            //software/simulation/...
            
      - name: Firmware Memory Leak Check
        run: |
          cd src
          bazel test -c dbg  \
            --run_under="valgrind --leak-check=yes --undef-value-errors=no --error-exitcode=1"   \
            //firmware/...
            
      - name: Shared Memory Leak Check
        run: |
          cd src
          bazel test -c dbg  \
            --run_under="valgrind --leak-check=yes --undef-value-errors=no --error-exitcode=1"   \
            //shared/parameter_v2/...

