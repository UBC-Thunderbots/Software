name: Tbots CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-20.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
        
      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh
      
      - name: Check Formatting
        run: |
          ./formatting_scripts/check_formatting_ci.sh

  software-tests:
    name: Software Tests
    runs-on: ubuntu-20.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: Software Test
        run: |
          cd src
          bazel test --show_timestamps       \
            -- //... -//software:full_system \
            -//software/simulated_tests/...  \
            -//software/ai/hl/...            \

  jetson-nano-tests:
    name: Jetson Nano Software Tests
    runs-on: ubuntu-20.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: Install and start redis server
        run: |
          wget http://download.redis.io/redis-stable.tar.gz 
          tar xvzf redis-stable.tar.gz >/dev/null 
          cd redis-stable
          make >/dev/null 
          make install >/dev/null 
          redis-server --daemonize yes          

      - name: Stop redis server
        run: |
          redis-cli shutdown

      - name: Jetson Nano Build
        run: |
         cd src
         bazel build --cpu=jetson_nano //software/jetson_nano:thunderloop_main

  simulated-gameplay-tests:
    name: Simulated Gameplay Tests
    runs-on: ubuntu-20.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
        
      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: Simulated Test (Continue on error)
        # make sure that replays are uploaded even if tests fail
        continue-on-error: true
        run: |
          cd src
          bazel test --show_timestamps       \
            //software:full_system           \
            //software/simulated_tests/...   \
            //software/ai/hl/...

      - name: Upload simulated test artifacts
        uses: actions/upload-artifact@v2
        with:
          name: simulated-test-outputs
          # we only care about the replay logs from the STP tests
          path: |
            src/bazel-out/k8-fastbuild/testlogs/software/ai/hl/stp

      - name: Simulated Test (Check for errors)
        # Run Simulated Tests a second time to check for failures
        run: |
          cd src
          bazel test --show_timestamps       \
            //software:full_system           \
            //software/simulated_tests/...   \
            //software/ai/hl/...

  ubuntu-18-software-tests:
    name: Ubuntu 18 Software Tests
    runs-on: ubuntu-18.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: Software Geom Test
        run: |
          cd src
          bazel test --show_timestamps       \
            //software/geom/...
