name: Tbots CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  diff-check:
    name: Check for Software and/or Firmware Changes
    outputs:
      run_software_tests: ${{ steps.check_files.outputs.run_software_tests }}
      run_firmware_tests: ${{ steps.check_files.outputs.run_fimrware_tests }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check files
        id: check_files
        run: |
          if "${GITHUB_WORKSPACE}"/.travis/check_for_changes.sh $TRAVIS_COMMIT_RANGE "firmware\|software\|environment_setup";
          then echo "::set-output name=run_software_tests::true"; else echo "::set-output name=run_software_tests::true"; fi
          
          if "${GITHUB_WORKSPACE}"/.travis/check_for_changes.sh $TRAVIS_COMMIT_RANGE "firmware_new/boards\|firmware/boards\|environment_setup";
          then echo "::set-output name=run_firmware_tests::true"; else echo "::set-output name=run_firmware_tests::true"; fi
            
  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-18.04
    
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
        
      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh
      
      - name: Check Formatting
        run: |
          ./formatting_scripts/check_formatting_ci.sh
          
  software-tests:
    name: Software Tests
    needs: diff-check
    if: needs.diff_check.outputs.run_software_tests == 'true'
    runs-on: ubuntu-18.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh
          
      - name: Cache Bazel External Dependencies
        uses: actions/cache@v2
        with:
          path: /home/runner/.cache/bazel
          key: bazel
          
      - name: Software Test
        run: |
          cd src
          bazel coverage                     \
            --compilation_mode=fastbuild     \
            --verbose_test_summary           \
            --instrumentation_filter=//...   \
            --test_output=errors             \
            -- //... -//software/simulated_tests/... \
            -//firmware_new/...
             
      # uploads coverage data to codecov
      - uses: codecov/codecov-action@v1
        with:
          directory: ${GITHUB_WORKSPACE}/src/bazel-testlogs
             
  firmware-tests:
    name: Firmware Tests
    runs-on: ubuntu-18.04
    needs: diff-check
    if: needs.diff_check.outputs.run_firmware_tests == 'true'
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
    
      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh
          "${GITHUB_WORKSPACE}"/environment_setup/setup_firmware.sh

      - name: New Robot Firmware Build
        run: |
         cd src
         bazel build --cpu=stm32h7 //firmware_new/boards/frankie_v1:frankie_v1_main 
     
      - name: Old Robot Firmware Build
        run: |
         cd src
         bazel build --cpu=stm32f4 //firmware/boards/legacy_robot_stm32f4:bin 
         
      - name: Old Radio Dongle Firmware Build
        run: |
         cd src
         bazel build --cpu=stm32f4 //firmware/boards/legacy_dongle_stm32f4:bin         
             
  simulated-gameplay-tests:
    name: Simulated Gameplay Tests
    runs-on: ubuntu-18.04
    needs: diff-check
    if: needs.diff_check.outputs.run_software_tests == 'true'
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
        
      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: Simulated Test
        run: |
          cd src
          bazel test //software/simulated_tests/...
          
  memory-leak-checks:
    name: Memory Leak Checks
    runs-on: ubuntu-18.04
    needs: diff-check
    if: needs.diff_check.outputs.run_software_tests == 'true'
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: Simulation Memory Leak Check
        run: |
          cd src
          bazel test -c dbg  \
            --run_under="valgrind --leak-check=yes --undef-value-errors=no --error-exitcode=1"   \
            //software/simulation/...
            
      - name: Firmware Memory Leak Check
        run: |
          cd src
          bazel test -c dbg  \
            --run_under="valgrind --leak-check=yes --undef-value-errors=no --error-exitcode=1"   \
            //firmware/...
            
      - name: Shared Memory Leak Check
        run: |
          cd src
          bazel test -c dbg  \
            --run_under="valgrind --leak-check=yes --undef-value-errors=no --error-exitcode=1"   \
            //shared/parameter_v2/...

