name: Tbots CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  ubuntu22-tests:
    name: Ubuntu 22.04 Build
    runs-on: ubuntu-22.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: Software Build Test
        run: |
          cd src
          bazel build --show_timestamps       \
            -- //... -//software:unix_full_system \
            -//software/simulated_tests/...  \
            -//software/ai/hl/...            \
            -//software/field_tests/...      \
            -//software/jetson_nano/...      \

      - name: Jetson Nano Build Test
        run: |
          cd src
          bazel build --cpu=jetson_nano //software/jetson_nano:thunderloop_main --copt=-O3

  software-tests:
    name: Software Tests
    runs-on: ubuntu-20.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: Software Test
        run: |
          cd src
          bazel test --copt=-O3 --show_timestamps       \
            -- //... -//software:unix_full_system \
            -//software/simulated_tests/...  \
            -//software/ai/hl/...            \
            -//software/field_tests/...      \
            -//software/ai/navigator/...

  jetson-nano-tests:
    name: Jetson Nano Software Tests
    runs-on: ubuntu-20.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: Install and start redis server
        run: |
          wget http://download.redis.io/redis-stable.tar.gz 
          tar xvzf redis-stable.tar.gz >/dev/null 
          cd redis-stable
          make >/dev/null 
          make install >/dev/null 
          redis-server --daemonize yes          

      - name: Stop redis server
        run: |
          redis-cli shutdown

      - name: Jetson Nano Build
        run: |
         cd src
         bazel build --cpu=jetson_nano //software/jetson_nano:thunderloop_main --copt=-O3

  simulated-gameplay-tests:
    name: Simulated Gameplay Tests
    runs-on: ubuntu-20.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
        
      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: Simulated Test Run
        run: |
          cd src
          bazel test --copt=-O3 --flaky_test_attempts=3 --show_timestamps       \
            //software:unix_full_system           \
            //software/simulated_tests/...   \
            //software/ai/hl/... \
            //software/ai/navigator/...

      - name: Upload simulated test proto logs
        # Ensure that simulated test logs get uploaded
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: blue-ai-proto-logs
          path: |
            /tmp/tbots/blue/logs

      - name: Upload simulated test proto logs
        # Ensure that simulated test logs get uploaded
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: yellow-ai-proto-logs
          path: |
            /tmp/tbots/yellow/logs

  autorefd-game:
    name: AutoRef'd Game (3 Minutes)
    runs-on: ubuntu-20.04
    steps:
      # checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      - name: Environment Setup
        run: |
          "${GITHUB_WORKSPACE}"/environment_setup/setup_software.sh

      - name: AI vs AI (3 minutes)
        run: |
          cd src
          bazel run --run_under="xvfb-run" //software/thunderscope:thunderscope_main --copt=-O3 -- --enable_autoref --ci_mode

      - name: Upload AI vs AI logs
        # Ensure that simulated test logs get uploaded
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: blue-ai-vs-ai-proto-logs
          path: |
            /tmp/tbots/blue/proto_*

      - name: Upload AI vs AI logs
        # Ensure that simulated test logs get uploaded
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: yellow-ai-vs-ai-proto-logs
          path: |
            /tmp/tbots/yellow/proto_*
