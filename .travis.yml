os: linux
dist: bionic
language: generic

install:
    - ./environment_setup/setup_software.sh

jobs:
  include:
    - name: "Build, Test, and Run Coverage (All Except SimulatedTests)"
      script:
        - cd src
        # Run tests and collect coverage on all except simulated tests
        - >
          bazel coverage                     \
            --compilation_mode=fastbuild     \
            --verbose_test_summary           \
            --instrumentation_filter=//...   \
            --test_output=errors             \
            -- //... -//software/simulated_tests/...
        # Collect Code Coverage Results
        # Print the first and last 100 lines of the output of the code coverage upload script
        # so we don't overflow the Travis CI logs
        - bash <(curl -s https://codecov.io/bash) -s bazel-testlogs/ > codecov.log
        - cat codecov.log | head -n100
        - cat codecov.log | tail -n100
    - name: "Build and Test (SimulatedTests)"
      script:
        - cd src
        # Run tests on only the simulated tests
        - >
          bazel test //software/simulated_tests/...
    - name: "Build Firmware Board Targets"
      script:
        - cd src
        # Build ARM Targets For Firmware
        - bazel build --cpu=stm32h7 //firmware_new/boards/frankie_v1:frankie_v1_main 
        - bazel build --cpu=stm32f4 //firmware/boards/legacy_robot_stm32f4:bin 
        - bazel build --cpu=stm32f4 //firmware/boards/legacy_dongle_stm32f4:bin 
    - name: "Test for Memory Leaks"
      script:
        - cd src
        # Test simulation, firmware and firmware_new
        - >
          bazel test -c dbg  \
            --run_under="valgrind --leak-check=yes --undef-value-errors=no --error-exitcode=1"   \
            //software/simulation/...
        - >
          bazel test -c dbg  \
            --run_under="valgrind --leak-check=yes --undef-value-errors=no --error-exitcode=1"   \
            //firmware/...
        - >
          bazel test -c dbg  \
            --run_under="valgrind --leak-check=yes --undef-value-errors=no --error-exitcode=1"   \
            //firmware_new/...
    - name: "Check Formatting"
      script:
        - ./formatting_scripts/check_formatting_ci.sh
